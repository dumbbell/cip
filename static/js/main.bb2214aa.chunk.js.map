{"version":3,"sources":["components/Album.js","App.js","reportWebVitals.js","index.js"],"names":["clubImmoAddress","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","Album","web3React","useWeb3React","useState","studentAddress","setStudentAddress","privileges","setPrivilegesList","requestAccount","a","window","ethereum","request","method","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","ClubImmoPrivilege","abi","thisPage","URL","location","URIs","path","pathname","push","address","utils","getAddress","grantPrivileges","transaction","wait","fetchPrivileges","activate","account","balanceOf","balance","console","log","toString","array","i","tokenOfOwnerByIndex","privilegeId","tokenURI","privilegeUri","fetch","response","json","id","useEffect","updatePrivileges","ThemeProvider","CssBaseline","AppBar","position","Toolbar","sx","mr","noWrap","Box","bgcolor","pt","pb","Container","maxWidth","component","gutterBottom","paragraph","Stack","direction","spacing","justifyContent","Button","onClick","py","Grid","container","map","privilege","item","xs","sm","md","Card","height","display","flexDirection","CardMedia","image","process","alt","name","CardContent","flexGrow","description","CardActions","size","p","TextField","required","label","defaultValue","onChange","e","target","value","getLibrary","connector","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb2214aa.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport LocationCity from '@mui/icons-material/LocationCity';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { ethers } from 'ethers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useState, useEffect } from 'react';\nimport ClubImmoPrivilege from '../artifacts/contracts/ClubImmoPrivilege.sol/ClubImmoPrivilege.json'\n\nconst clubImmoAddress = \"0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f\"; // Localhost\n//const clubImmoAddress = \"0x6c6C4007bc6c5ebb48ceB1E95bA5aCf521274867\"; // Ropsten\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Jean-Sébastien Pédron\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function Album() {\n  const web3React = useWeb3React();\n  const [studentAddress, setStudentAddress] = useState();\n  const [privileges, setPrivilegesList] = useState([]);\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function grantPrivileges() {\n    if (!studentAddress) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(clubImmoAddress, ClubImmoPrivilege.abi, signer);\n\n      const thisPage = new URL(window.location.href);\n      const basePath = '/privileges/';\n      const paths = [\n        'creation-sci.json',\n        'creation-holding.json',\n        'coaching.json',\n        'workshop.json',\n      ];\n      const URIs = [];\n      for (var path of paths) {\n        thisPage.pathname = basePath + path;\n        URIs.push(thisPage.href);\n      }\n\n      const address = ethers.utils.getAddress(studentAddress);\n      const transaction = await contract.grantPrivileges(address, URIs);\n      await transaction.wait();\n      fetchPrivileges();\n    }\n  }\n\n  async function fetchPrivileges() {\n    await web3React.activate();\n\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(\n        clubImmoAddress, ClubImmoPrivilege.abi, provider);\n\n      try {\n        const balance = await contract.balanceOf(account);\n        console.log('Privileges count:', balance.toString())\n\n        let array = [];\n        for (var i = 0; i < balance; i++) {\n          const privilegeId = await contract.tokenOfOwnerByIndex(account, i);\n          const privilegeUri = await contract.tokenURI(privilegeId);\n          console.log('Privilege URI:', privilegeUri);\n\n          const response = await fetch(privilegeUri);\n          const json = await response.json();\n          json.id = privilegeId;\n          console.log('Privilege JSON:', json);\n          array.push(json);\n        }\n        console.log('Privileges: ', array)\n        setPrivilegesList(array);\n      } catch (err) {\n        console.log(\"Error:\", err)\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function updatePrivileges() {\n      await fetchPrivileges();\n    }\n    updatePrivileges()\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <LocationCity sx={{ mr: 2 }} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Mes privilèges Club Immobilier\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <Box\n          sx={{\n            bgcolor: 'background.paper',\n            pt: 8,\n            pb: 6,\n          }}\n        >\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"text.primary\"\n              gutterBottom\n            >\n              Mes privilèges Club&nbsp;Immobilier\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n              Voici la liste des privilèges Club Immobilier en votre\n              possession. Libre à vous de vous en servir ou de les échanger\n              avec les autres élèves Club Immobilier grâce à la <em>blockchain\n              Ethereum</em>.\n            </Typography>\n            <Stack\n              sx={{ pt: 4 }}\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"center\"\n            >\n              <Button\n                align=\"center\"\n                onClick={fetchPrivileges}\n              >\n                Récupérer mes privilèges\n              </Button>\n            </Stack>\n          </Container>\n        </Box>\n        <Container sx={{ py: 8 }} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {privileges.map((privilege) => (\n              <Grid item key={privilege.id} xs={12} sm={6} md={4}>\n                <Card\n                  sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    image={process.env.PUBLIC_URL + privilege.image}\n                    alt={privilege.name}\n                  />\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {privilege.name}\n                    </Typography>\n                    <Typography>\n                      {privilege.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\">Transférer</Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Mes privilèges Club Immobilier\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          Un outil qu'il est bien pour s'initier à la blockchain !\n        </Typography>\n        <Stack\n          direction=\"row\"\n          spacing={2}\n          justifyContent=\"center\"\n        >\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Adresse Ethereum de l'étudiant\"\n            defaultValue=\"\"\n            variant=\"standard\"\n            onChange={e => setStudentAddress(e.target.value)}\n          />\n          <Button\n            align=\"center\"\n            onClick={grantPrivileges}\n          >\n            Attribuer les privilèges\n          </Button>\n        </Stack>\n        <Copyright />\n      </Box>\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import './App.css';\n\nimport { ethers } from 'ethers';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Album from './components/Album.js';\n\nfunction getLibrary(provider, connector) {\n  return new ethers.provider.Web3Provider(provider);\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Album/>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}